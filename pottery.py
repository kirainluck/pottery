# -*- coding: utf-8 -*-

# PotteryMaster v.1.0 Kirill Prokhorov
# Form implementation generated from reading ui file 'pottery.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import joblib
import pandas as pd
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QFileDialog
from ctglists import clf_lst, portion_lst, fabric_color_lst, names_all, name_mapping
from ai2png import convert_ai_to_png


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(950, 410)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 950, 410))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMinimumSize(QtCore.QSize(500, 300))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.tab_3)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(10, 10, 871, 331))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_11 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_11.setObjectName("label_11")
        self.gridLayout_3.addWidget(self.label_11, 5, 1, 1, 1)
        self.lineEdit_10 = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.gridLayout_3.addWidget(self.lineEdit_10, 7, 2, 1, 1)
        self.pushButton_5 = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout_3.addWidget(self.pushButton_5, 8, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_8.setObjectName("label_8")
        self.gridLayout_3.addWidget(self.label_8, 5, 0, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_13.setObjectName("label_13")
        self.gridLayout_3.addWidget(self.label_13, 0, 2, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout_3.addWidget(self.lineEdit_4, 7, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_5.setObjectName("label_5")
        self.gridLayout_3.addWidget(self.label_5, 0, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_7.setObjectName("label_7")
        self.gridLayout_3.addWidget(self.label_7, 2, 0, 1, 1)
        self.lineEdit_9 = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.gridLayout_3.addWidget(self.lineEdit_9, 3, 2, 1, 1)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.gridLayout_3.addWidget(self.lineEdit_7, 7, 1, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_19.setObjectName("label_19")
        self.gridLayout_3.addWidget(self.label_19, 0, 3, 1, 1)
        self.frame = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_3.addWidget(self.frame, 3, 3, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_15.setObjectName("label_15")
        self.gridLayout_3.addWidget(self.label_15, 5, 2, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_14.setObjectName("label_14")
        self.gridLayout_3.addWidget(self.label_14, 2, 2, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_10.setObjectName("label_10")
        self.gridLayout_3.addWidget(self.label_10, 2, 1, 1, 1)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.gridLayout_3.addWidget(self.lineEdit_6, 3, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_9.setObjectName("label_9")
        self.gridLayout_3.addWidget(self.label_9, 0, 1, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout_3.addWidget(self.lineEdit_3, 3, 0, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.gridLayoutWidget_3)
        self.comboBox.setObjectName("comboBox")
        self.gridLayout_3.addWidget(self.comboBox, 1, 0, 1, 1)
        self.comboBox_2 = QtWidgets.QComboBox(self.gridLayoutWidget_3)
        self.comboBox_2.setObjectName("comboBox_2")
        self.gridLayout_3.addWidget(self.comboBox_2, 1, 1, 1, 1)
        self.comboBox_3 = QtWidgets.QComboBox(self.gridLayoutWidget_3)
        self.comboBox_3.setObjectName("comboBox_3")
        self.gridLayout_3.addWidget(self.comboBox_3, 1, 2, 1, 1)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab.sizePolicy().hasHeightForWidth())
        self.tab.setSizePolicy(sizePolicy)
        self.tab.setObjectName("tab")
        self.gridLayoutWidget = QtWidgets.QWidget(self.tab)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 571, 221))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton_2 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.pushButton_2, 2, 2, 1, 1)
        self.label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.lineEdit_13 = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.gridLayout.addWidget(self.lineEdit_13, 2, 1, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 1, 2, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.pushButton_3, 3, 1, 1, 1)
        self.lineEdit_15 = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.gridLayout.addWidget(self.lineEdit_15, 1, 1, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.pushButton_5.clicked.connect(self.predict_form)
        self.model = self.init_model()
        self.dest_folder = ''
        self.result_folder = ''
        self.pushButton.clicked.connect(self.load_dest_folder)
        self.pushButton_2.clicked.connect(self.load_result_folder)
        self.pushButton_3.clicked.connect(self.convert_files)
        self.lineEdit_15.textChanged.connect(self.dest_changed)
        self.lineEdit_13.textChanged.connect(self.res_changed)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PotteryMaster v.1.0"))
        self.label_11.setText(_translate("MainWindow", "Longtitude"))
        self.pushButton_5.setText(_translate("MainWindow", "Predict"))
        self.label_8.setText(_translate("MainWindow", "Diamter"))
        self.label_13.setText(_translate("MainWindow", "Fabric color"))
        self.label_5.setText(_translate("MainWindow", "Classification"))
        self.label_7.setText(_translate("MainWindow", "Length"))
        self.label_19.setText(_translate("MainWindow", "Prediction result:"))
        self.label_15.setText(_translate("MainWindow", "Latitude"))
        self.label_14.setText(_translate("MainWindow", "Thick"))
        self.label_10.setText(_translate("MainWindow", "Width"))
        self.label_9.setText(_translate("MainWindow", "Portion"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Pottery predictor"))
        self.pushButton_2.setText(_translate("MainWindow", "Load..."))
        self.label.setText(_translate("MainWindow", "AI files folder"))
        self.label_2.setText(_translate("MainWindow", "Result folder"))
        self.pushButton.setText(_translate("MainWindow", "Load..."))
        self.pushButton_3.setText(_translate("MainWindow", "Convert"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "AI converter"))
        self.comboBox.addItems(clf_lst)
        self.comboBox_2.addItems(portion_lst)
        self.comboBox_3.addItems(fabric_color_lst)
        self.comboBox.setFixedSize(240,30)
        self.comboBox_2.setFixedSize(240, 30)
        self.comboBox_3.setFixedSize(240, 30)

    def showDialog(self, msg, ifInfo=False):
        msgBox = QMessageBox()
        if not ifInfo:
            msgBox.setIcon(QMessageBox.Critical)
            msgBox.setWindowTitle("Error")
            msgBox.buttonClicked.connect(self.clear_controls)
        else:
            msgBox.setIcon(QMessageBox.Information)
            msgBox.setWindowTitle("Result")
        msgBox.setText(msg)
        msgBox.setStandardButtons(QMessageBox.Ok)

        returnValue = msgBox.exec()
        if returnValue == QMessageBox.Ok:
            print('OK')

    def clear_controls(self):
        pass

    def predict_form(self):
        vals_lst = []
        try:
            vals_lst.append(float(name_mapping[self.comboBox.currentText()]))
            vals_lst.append(float(name_mapping[self.comboBox_2.currentText()]))
            vals_lst.append(float(name_mapping[self.comboBox_3.currentText()]))
            vals_lst.append(float(str(self.lineEdit_3.text())))
            vals_lst.append(float(str(self.lineEdit_6.text())))
            vals_lst.append(float(str(self.lineEdit_9.text())))
            vals_lst.append(float(str(self.lineEdit_4.text())))
            vals_lst.append(float(str(self.lineEdit_7.text())))
            vals_lst.append(float(str(self.lineEdit_10.text())))
            df = pd.DataFrame([vals_lst],
                              columns=['classification', 'portion', 'fabric_color', 'pres_length', 'pres_width',
                                       'pres_thick', 'pres_diam', 'latitude', 'longitude'])
            model = self.init_model()
            y_pred = model.predict(df)[0]
            self.label_19.setText("{}\n{}".format("Prediction result:", names_all[int(y_pred)]))
        except Exception as e:
            print(e.__doc__)
            print(e.__str__())
            self.showDialog("{}\n{}".format(e.__doc__, e.__str__()))

    def init_model(self):
        model = joblib.load("pottery_classifier.joblib.pkl")
        return model

    def load_folder(self):
        return QFileDialog.getExistingDirectory()

    def load_dest_folder(self):
        self.dest_folder = self.load_folder()
        self.lineEdit_15.setText(self.dest_folder)

    def load_result_folder(self):
        self.result_folder = self.load_folder()
        self.lineEdit_13.setText(self.result_folder)

    def dest_changed(self):
        self.dest_folder = self.lineEdit_15.text()

    def res_changed(self):
        self.result_folder = self.lineEdit_13.text()

    def convert_files(self):
        try:
            convert_ai_to_png(self.dest_folder, self.result_folder)
            self.showDialog("Result loaded to {}".format(self.result_folder), ifInfo=True)
        except Exception as e:
            print(e.__doc__)
            print(e.__str__())
            self.showDialog("{}\n{}".format(e.__doc__, e.__str__()))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
